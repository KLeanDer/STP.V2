import { Controller, Get, Post, Param, Req, UseGuards, Optional } from '@nestjs/common';
import { RecommendationsService } from './recommendations.service';
import { JwtAuthGuard } from '../auth/jwt-auth.guard';

@Controller('recommendations')
export class RecommendationsController {
  constructor(private readonly service: RecommendationsService) {}

  // üîπ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —é–∑–µ—Ä ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º)
  @Post('view/:listingId')
  async addView(@Req() req, @Param('listingId') listingId: string) {
    const userId = req.user?.id || null;
    return this.service.addView(userId, listingId);
  }

  // üîπ –Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ (—Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ)
  @UseGuards(JwtAuthGuard)
  @Get('recent')
  async recent(@Req() req) {
    return this.service.getRecentlyViewed(req.user.id);
  }

  // üîπ —É–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (–≥–æ—Å—Ç–∏ + —é–∑–µ—Ä—ã)
  @Get('smart')
  async smart(@Req() req) {
    const userId = req.user?.id || null;
    return this.service.getSmartRecommendations(userId);
  }
}
