generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  avatarUrl String?
  phone     String?   @unique
  about     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listings     Listing[]
  messagesSent Message[]   @relation("SentMessages")
  messagesRecv Message[]   @relation("ReceivedMessages")

  buyerOrders  Order[] @relation("BuyerOrders")
  sellerOrders Order[] @relation("SellerOrders")
}

model Listing {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Float
  category    String   @default("OTHER")
  status      String   @default("active") // active | inactive
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User    @relation(fields: [userId], references: [id])
  images Image[]
  orders Order[]
}

model Image {
  id        String   @id @default(uuid())
  url       String
  listingId String
  listing   Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
}

model Message {
  id         String   @id @default(uuid())
  text       String
  status     String   @default("SENT") // SENT | DELIVERED | READ
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  senderId   String
  receiverId String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model Order {
  id          String   @id @default(uuid())
  buyerId     String
  sellerId    String
  listingId   String
  city        String
  postOffice  String
  comment     String?  // üëà –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π
  status      String   @default("pending") // pending | confirmed | shipped | completed | cancelled
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  buyer   User    @relation("BuyerOrders", fields: [buyerId], references: [id])
  seller  User    @relation("SellerOrders", fields: [sellerId], references: [id])
  listing Listing @relation(fields: [listingId], references: [id])
}
